doctype html
html(lang='en')
    head
        meta(charset='UTF-8')
        meta(http-equiv='X-UA-Compatible' content='IE=edge')
        meta(name='viewport' content='width=device-width, initial-scale=1.0')
        title Apis for test
        link(rel='stylesheet' href='https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/css/bootstrap.min.css')
        style.
            @import url('https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;0,700;1,300;1,400;1,500;1,700&display=swap');
            * {
            box-sizing: border-box;
            font-family: 'Ubuntu', sans-serif;
            }
            .p-light {
            font-weight: 300 !important;
            }
            .p-regular {
            font-weight: 400 !important;
            }
            .p-medium {
            font-weight: 500 !important;
            }
            .p-semi-bold {
            font-weight: 500 !important;
            }
            .p-bold {
            font-weight: 700 !important;
            }
            .p-extra-bold {
            font-weight: 800 !important;
            }
            .p-black {
            font-weight: 900 !important;
            }
    body.container-fluid
        h1.p-bold.py-3 Test qilish uchun apilar
        h5.mb-5
            | Hamma get requestlar
            a(href='https://jsonplaceholder.typicode.com/' target='_blank') jsonplaceholder
            |  saytdan olingan faqat ularga qoshimcha ravishda post, put, delete qoshilgan ya'ni crud
            |         qilish. Hamma apilar to'liq ishlidi. Siz databasedigi malumotlarga qanaqadir
            |         o'zgartirish kiritsez u data faqat 1kun databaseda turadi va 1 kundan keyin database
            |         auto restart bo'ladi. Auto restart bo'lish vohti tahminan kun tugashida bo'ladi yani
            |         23:59 lar atrofida.
        hr
        |  Base URL:
        button.btn.button.ml-2(data-toggle='tooltip' data-placement='top' title='Copy to clipboard' data-html='true' onclick='copylink()') https://testapi.cyclic.app
        hr
        // Users
        h3 Users
        table.table.table-striped.table-bordered
            thead.thead-dark
                tr
                    th(scope='col') Route
                    th(scope='col') Params
                    th(scope='col') HTTP
                    th(scope='col') Body
                    th(scope='col') Response success, Status
                    th(scope='col') Response error, Status
                    th(scope='col') Description
            tbody
                tr
                    td
                        a(href='https://testapi.cyclic.app/users?limit=5&page=1' target='_blank') /users
                    td
                        pre.
                            { page: number, limit: number }
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                data: {
                                    _id: string,
                                    name: string,
                                    username: string,
                                    email: string,
                                    address: {
                                        street: string,
                                        suite: string,
                                        city: string,
                                        zipcode: string,
                                        geo: {
                                            lat: string,
                                            lng: string
                                        }
                                    },
                                    phone: string,
                                    website: string,
                                    company: {
                                        name: string,
                                        catchPhrase: string,
                                        bs: string
                                    }
                                }[],
                                pageLists: number,
                                page: number | string,
                            }, 200
                    td
                    td Get All Users
                tr
                    td /users/:userId
                    td
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                _id: string,
                                name: string,
                                username: string,
                                email: string,
                                address: {
                                    street: string,
                                    suite: string,
                                    city: string,
                                    zipcode: string,
                                    geo: {
                                        lat: string,
                                        lng: string
                                    }
                                },
                                phone: string,
                                website: string,
                                company: {
                                    name: string,
                                    catchPhrase: string,
                                    bs: string
                                }
                            }, 200
                    td { message: 'User not found' }, 400
                    td Get User
                tr
                    td /users
                    td
                    td
                        span.badge.badge-primary POST
                    td
                        pre.
                            {
                                name: string,
                                username: string,
                                email: string,
                                phone: string
                                address: { city: string }
                            }
                    td { message: 'User added', success: true }, 201
                    td { message: string | {}, success: false }, 400
                    td Add User
                tr
                    td /users/:userId
                    td
                    td
                        span.badge.badge-warning PUT
                    td
                        pre.
                            {
                                name: string,
                                username: string,
                                email: string,
                                phone: string
                                address: { city: string }
                                ...
                            }
                    td { message: 'User updated', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Edit User
                tr
                    td /users/:userId
                    td
                    td
                        span.badge.badge-danger DELETE
                    td
                    td { message: 'User deleted', success: true }, 200
                    td { message: 'User not found', success: false }, 400
                    td Delete User
        hr
        // Todos
        h3 Todos
        table.table.table-striped.table-bordered
            thead.thead-dark
                tr
                    th(scope='col') Route
                    th(scope='col') Params
                    th(scope='col') HTTP
                    th(scope='col') Body
                    th(scope='col') Response success, Status
                    th(scope='col') Response error, Status
                    th(scope='col') Description
            tbody
                tr
                    td
                        a(href='https://testapi.cyclic.app/todos?limit=5&page=1' target='_blank') /todos
                    td
                        pre.
                            { page: number, limit: number }
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                data: {
                                    _id: string,
                                    title: string,
                                    completed: boolean,
                                    userId: string
                                }[],
                                pageLists: number,
                                page: number | string,
                            }, 200
                    td
                    td Get All Todos
                tr
                    td /todos/:todoId
                    td
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                _id: string,
                                title: string,
                                completed: boolean,
                                userId: string
                            }, 200
                    td { message: 'Todo not found' }, 400
                    td Get Todo
                tr
                    td /todos
                    td
                    td
                        span.badge.badge-primary POST
                    td
                        pre.
                            {
                                title: string,
                                completed: boolean,
                                userId: string
                            }
                    td { message: 'Todo added', success: true }, 201
                    td { message: string | {}, success: false }, 400
                    td Add Todo
                tr
                    td /todos/:todoId
                    td
                    td
                        span.badge.badge-warning PUT
                    td
                        pre.
                            {
                                title: string,
                                completed: boolean,
                                userId: string
                                ...
                            }
                    td { message: 'Todo updated', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Edit Todo
                tr
                    td /todos/:todoId
                    td
                    td
                        span.badge.badge-danger DELETE
                    td
                    td { message: 'Todo deleted', success: true }, 200
                    td { message: 'Todo not found', success: false }, 400
                    td Delete Todo
        // Posts
        h3 Posts
        table.table.table-striped.table-bordered
            thead.thead-dark
                tr
                    th(scope='col') Route
                    th(scope='col') Params
                    th(scope='col') HTTP
                    th(scope='col') Body
                    th(scope='col') Response success, Status
                    th(scope='col') Response error, Status
                    th(scope='col') Description
            tbody
                tr
                    td
                        a(href='https://testapi.cyclic.app/posts?limit=5&page=1' target='_blank') /posts
                    td
                        pre.
                            { page: number, limit: number }
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                data: {
                                    _id: string,
                                    title: string,
                                    body: string,
                                    userId: string
                                }[],
                                pageLists: number,
                                page: number | string,
                            }, 200
                    td
                    td Get All Posts
                tr
                    td /posts/:postId
                    td
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                _id: string,
                                title: string,
                                body: string,
                                userId: string
                            }, 200
                    td { message: 'Post not found' }, 400
                    td Get Post
                tr
                    td /posts
                    td
                    td
                        span.badge.badge-primary POST
                    td
                        pre.
                            {
                                title: string,
                                body: string,
                                userId: string
                            }
                    td { message: 'Post added', success: true }, 201
                    td { message: string | {}, success: false }, 400
                    td Add Post
                tr
                    td /posts/:postId
                    td
                    td
                        span.badge.badge-warning PUT
                    td
                        pre.
                            {
                                title: string,
                                body: string,
                                userId: string
                                ...
                            }
                    td { message: 'Post updated', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Edit Post
                tr
                    td /posts/:postId
                    td
                    td
                        span.badge.badge-danger DELETE
                    td
                    td { message: 'Post deleted', success: true }, 200
                    td { message: 'Post not found', success: false }, 400
                    td Delete Post
        // Comments
        h3 Comments
        table.table.table-striped.table-bordered
            thead.thead-dark
                tr
                    th(scope='col') Route
                    th(scope='col') Params
                    th(scope='col') HTTP
                    th(scope='col') Body
                    th(scope='col') Response success, Status
                    th(scope='col') Response error, Status
                    th(scope='col') Description
            tbody
                tr
                    td
                        a(href='https://testapi.cyclic.app/comments?limit=5&page=1' target='_blank') /comments
                    td
                        pre.
                            { page: number, limit: number }
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                data: {
                                    _id: string,
                                    name: string,
                                    email: string,
                                    body: string,
                                    postId: string
                                }[],
                                pageLists: number,
                                page: number | string,
                            }, 200
                    td
                    td Get All Comments
                tr
                    td /comments/:commentId
                    td
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                _id: string,
                                name: string,
                                email: string,
                                body: string,
                                postId: string
                            }, 200
                    td { message: 'Comment not found' }, 400
                    td Get Comment
                tr
                    td /comments
                    td
                    td
                        span.badge.badge-primary POST
                    td
                        pre.
                            {
                                name: string,
                                email: string,
                                body: string,
                                postId: string
                            }
                    td { message: 'Comment added', success: true }, 201
                    td { message: string | {}, success: false }, 400
                    td Add Comment
                tr
                    td /comments/:commentId
                    td
                    td
                        span.badge.badge-warning PUT
                    td
                        pre.
                            {
                                name: string,
                                email: string,
                                body: string,
                                postId: string
                                ...
                            }
                    td { message: 'Comment updated', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Edit Comment
                tr
                    td /comments/:commentId
                    td
                    td
                        span.badge.badge-danger DELETE
                    td
                    td { message: 'Comment deleted', success: true }, 200
                    td { message: 'Comment not found', success: false }, 400
                    td Delete Comment
        // Albums
        h3 Albums
        table.table.table-striped.table-bordered
            thead.thead-dark
                tr
                    th(scope='col') Route
                    th(scope='col') Params
                    th(scope='col') HTTP
                    th(scope='col') Body
                    th(scope='col') Response success, Status
                    th(scope='col') Response error, Status
                    th(scope='col') Description
            tbody
                tr
                    td
                        a(href='https://testapi.cyclic.app/albums?limit=5&page=1' target='_blank') /albums
                    td
                        pre.
                            { page: number, limit: number }
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                data: {
                                    _id: string,
                                    name: string,
                                    email: string,
                                    body: string,
                                    postId: string
                                }[],
                                pageLists: number,
                                page: number | string,
                            }, 200
                    td
                    td Get All Albums
                tr
                    td /albums/:albumId
                    td
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                _id: string,
                                name: string,
                                email: string,
                                body: string,
                                postId: string
                            }, 200
                    td { message: 'Album not found' }, 400
                    td Get Album
                tr
                    td /albums
                    td
                    td
                        span.badge.badge-primary POST
                    td
                        pre.
                            {
                                name: string,
                                email: string,
                                body: string,
                                postId: string
                            }
                    td { message: 'Album added', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Add Album
                tr
                    td /albums/:albumId
                    td
                    td
                        span.badge.badge-warning PUT
                    td
                        pre.
                            {
                                name: string,
                                email: string,
                                body: string,
                                postId: string
                                ...
                            }
                    td { message: 'Album updated', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Edit Album
                tr
                    td /albums/:albumId
                    td
                    td
                        span.badge.badge-danger DELETE
                    td
                    td { message: 'Album deleted', success: true }, 200
                    td { message: 'Album not found', success: false }, 400
                    td Delete Album
        // Photos
        h3 Photos
        table.table.table-striped.table-bordered
            thead.thead-dark
                tr
                    th(scope='col') Route
                    th(scope='col') Params
                    th(scope='col') HTTP
                    th(scope='col') Body
                    th(scope='col') Response success, Status
                    th(scope='col') Response error, Status
                    th(scope='col') Description
            tbody
                tr
                    td
                        a(href='https://testapi.cyclic.app/photos?limit=5&page=1' target='_blank') /photos
                    td
                        pre.
                            { page: number, limit: number }
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                data: {
                                    _id: string,
                                    title: string,
                                    url: string,
                                    thumbnailUrl: string,
                                    albumId: string
                                }[],
                                pageLists: number,
                                page: number | string,
                            }, 200
                    td
                    td Get All Photos
                tr
                    td /photos/:photoId
                    td
                    td
                        span.badge.badge-success GET
                    td
                    td
                        pre.
                            {
                                title: string,
                                url: string,
                                thumbnailUrl: string,
                                albumId: string
                            }, 200
                    td { message: 'Photo not found' }, 400
                    td Get Photo
                tr
                    td /photos
                    td
                    td
                        span.badge.badge-primary POST
                    td
                        pre.
                            {
                                albumId: string,
                                title: string,
                                image: jpeg|jpg|png
                            }
                    td { message: 'Album added', success: true }, 201
                    td { message: string | {}, success: false }, 400
                    td Add Photo
                tr
                    td /photos/:photoId
                    td
                    td
                        span.badge.badge-warning PUT
                    td
                        pre.
                            {
                                albumId: string,
                                title: string,
                                image: jpeg|jpg|png
                                ...
                            }
                    td { message: 'Photo updated', success: true }, 200
                    td { message: string | {}, success: false }, 400
                    td Edit Photo
                tr
                    td /photos/:photoId
                    td
                    td
                        span.badge.badge-danger DELETE
                    td
                    td { message: 'Photo deleted', success: true }, 200
                    td { message: 'Photo not found', success: false }, 400
                    td Delete Photo
        hr
        p
            | Author: 
            a(href='https://t.me/MaSTeR_R_M' target='_blank') Mirzamurod
        script(src='https://code.jquery.com/jquery-3.3.1.slim.min.js')
        script(src='https://cdn.jsdelivr.net/npm/popper.js@1.14.3/dist/umd/popper.min.js')
        script(src='https://cdn.jsdelivr.net/npm/bootstrap@4.1.3/dist/js/bootstrap.min.js')
        script.
            $(function() {
            $('[data-toggle="tooltip"]').tooltip()
            })
            const copylink = () => {
            navigator.clipboard.writeText('https://testapi.cyclic.app')
            document.querySelector('.tooltip-inner').innerHTML = 'Copied element'
            }
